# version: '3.8'

# services:
#   prometheus:
#     image: prom/prometheus:latest
#     container_name: telegrambot-prometheus
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml
#       - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#     ports:
#       - "9090:9090"
#     networks:
#       - monitor-net

#   alertmanager:
#     image: prom/alertmanager:latest
#     container_name: telegrambot-alertmanager
#     volumes:
#       - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
#     command:
#       - '--config.file=/etc/alertmanager/alertmanager.yml'
#     ports:
#       - "9093:9093"
#     networks:
#       - monitor-net

#   # users-service:
#   #   build: "./users-service"
#   #   container_name: users-service
#   #   ports:
#   #     - "8081:8081"
#   #   networks:
#   #     - monitor-net

# networks:
#   monitor-net:
#     driver: bridge

version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: telegrambot-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - demo-network   # attach to existing network

  alertmanager:
    image: prom/alertmanager:latest
    container_name: telegrambot-alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - "9093:9093"
    networks:
      - demo-network   # attach to existing network

  # Optional: containerized users-service
  users-service:
    build: "./users-service"
    container_name: users-service
    ports:
      - "8081:8081"
    networks:
      - demo-network
    environment:
      DSN: "host=pg user=app password=app123 dbname=usersdb port=5432 sslmode=disable"

  
  pg:
    image: postgres:latest
    container_name: pg
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app123
      POSTGRES_DB: usersdb
    ports:
      - "5433:5432"
    networks:
      - demo-network
  

networks:
  demo-network:
    external: true   # tells Compose: don't create, use the existing one
