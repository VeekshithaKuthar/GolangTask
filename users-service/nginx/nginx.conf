worker_processes auto;
events { worker_connections 1024; }

http {
  # Log / gzip / timeouts (trim as needed)
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 4096;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # Upstream to your identical app containers
  upstream dbui {
    least_conn;                               # better than pure RR under uneven load
    server pgui:8080 max_fails=3 fail_timeout=10s;
    server pgui2:8080 max_fails=3 fail_timeout=10s;
    # optional: keepalive 64;                 # for upstream keepalive
  }

  upstream backend {
    least_conn;                               # better than pure RR under uneven load
    server user-service1:8080 max_fails=3 fail_timeout=10s;
    server user-service2:8080 max_fails=3 fail_timeout=10s;
    # optional: keepalive 64;                 # for upstream keepalive
  }



  # --- OPTIONAL: Sticky sessions (comment out if you don't need sessions)
  # map $cookie_app_sticky $sticky_route {
  #   default $cookie_app_sticky;
  # }
  # upstream backend {
  #   least_conn;
  #   sticky cookie app_sticky expires=1h path=/ httponly;
  #   server app1:8080;
 #   server app2:8080;
  # }

  server {
    listen 80;
    # listen 443 ssl http2;                   # enable when you add TLS certs
    server_name _;

    # --- OPTIONAL TLS ---
    # ssl_certificate     /etc/nginx/certs/fullchain.pem;
    # ssl_certificate_key /etc/nginx/certs/privkey.pem;

    root  /usr/share/nginx/html;
    index index.html;

    # Health endpoint (so you can probe NGINX itself)
    location = /healthz { return 200 'ok'; add_header Content-Type text/plain; }
    # location  /google {
    #   proxy_pass https://www.google.com;
    # }

    # Root: redirect users to Google (preserves path & query)
    location /google {
      #return 302 https://www.google.com$request_uri;
      return 302 https://www.google.com;
    }
    # App
    location /dbui {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket support
      proxy_set_header Upgrade           $http_upgrade;
    # proxy_set_header Connection        $connection_upgrade;
    #   map $http_upgrade $connection_upgrade {
    #     default upgrade;
    #     ''      close;
    #   }

      proxy_read_timeout 75s;
      proxy_send_timeout 75s;

      proxy_pass http://dbui;
    }

    location /backend/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket support
      proxy_set_header Upgrade           $http_upgrade;
    # proxy_set_header Connection        $connection_upgrade;
    #   map $http_upgrade $connection_upgrade {
    #     default upgrade;
    #     ''      close;
    #   }

      proxy_read_timeout 75s;
      proxy_send_timeout 75s;

      proxy_pass http://backend/;
    }
    }
}
